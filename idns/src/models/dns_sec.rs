/*
 * Intelligent DNS API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct DnsSec {
    #[serde(rename = "is_enabled", skip_serializing_if = "Option::is_none")]
    pub is_enabled: Option<bool>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
    #[serde(rename = "delegation_signer", skip_serializing_if = "Option::is_none")]
    pub delegation_signer: Option<Box<crate::models::DnsSecDelegationSigner>>,
}

impl DnsSec {
    pub fn new() -> DnsSec {
        DnsSec {
            is_enabled: None,
            status: None,
            delegation_signer: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "unconfigured")]
    Unconfigured,
    #[serde(rename = "waiting")]
    Waiting,
    #[serde(rename = "ready")]
    Ready,
}

impl Default for Status {
    fn default() -> Status {
        Self::Unconfigured
    }
}

