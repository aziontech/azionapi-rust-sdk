/*
 * Intelligent DNS API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// GetZonesResponse : Object returned by get zones



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetZonesResponse {
    /// The schema version
    #[serde(rename = "schema_version", skip_serializing_if = "Option::is_none")]
    pub schema_version: Option<i32>,
    /// Number of records
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<i32>,
    /// The total pages
    #[serde(rename = "total_pages", skip_serializing_if = "Option::is_none")]
    pub total_pages: Option<i32>,
    #[serde(rename = "links", skip_serializing_if = "Option::is_none")]
    pub links: Option<Box<crate::models::GetZonesResponseLinks>>,
    /// Hosted zones collection
    #[serde(rename = "results", skip_serializing_if = "Option::is_none")]
    pub results: Option<Vec<crate::models::Zone>>,
}

impl GetZonesResponse {
    /// Object returned by get zones
    pub fn new() -> GetZonesResponse {
        GetZonesResponse {
            schema_version: None,
            count: None,
            total_pages: None,
            links: None,
            results: None,
        }
    }
}


