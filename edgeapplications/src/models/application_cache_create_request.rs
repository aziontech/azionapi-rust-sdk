/*
 * Edge Application API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ApplicationCacheCreateRequest {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "browser_cache_settings", skip_serializing_if = "Option::is_none")]
    pub browser_cache_settings: Option<String>,
    #[serde(rename = "browser_cache_settings_maximum_ttl", skip_serializing_if = "Option::is_none")]
    pub browser_cache_settings_maximum_ttl: Option<i64>,
    #[serde(rename = "cdn_cache_settings", skip_serializing_if = "Option::is_none")]
    pub cdn_cache_settings: Option<String>,
    #[serde(rename = "cdn_cache_settings_maximum_ttl", skip_serializing_if = "Option::is_none")]
    pub cdn_cache_settings_maximum_ttl: Option<i64>,
    #[serde(rename = "cache_by_query_string", skip_serializing_if = "Option::is_none")]
    pub cache_by_query_string: Option<String>,
    #[serde(rename = "query_string_fields", skip_serializing_if = "Option::is_none")]
    pub query_string_fields: Option<Vec<String>>,
    #[serde(rename = "enable_query_string_sort", skip_serializing_if = "Option::is_none")]
    pub enable_query_string_sort: Option<bool>,
    #[serde(rename = "cache_by_cookies", skip_serializing_if = "Option::is_none")]
    pub cache_by_cookies: Option<String>,
    #[serde(rename = "cookie_names", skip_serializing_if = "Option::is_none")]
    pub cookie_names: Option<Vec<String>>,
    #[serde(rename = "adaptive_delivery_action", skip_serializing_if = "Option::is_none")]
    pub adaptive_delivery_action: Option<String>,
    #[serde(rename = "device_group", skip_serializing_if = "Option::is_none")]
    pub device_group: Option<Vec<i32>>,
    #[serde(rename = "enable_caching_for_post", skip_serializing_if = "Option::is_none")]
    pub enable_caching_for_post: Option<bool>,
    #[serde(rename = "l2_caching_enabled", skip_serializing_if = "Option::is_none")]
    pub l2_caching_enabled: Option<bool>,
    #[serde(rename = "is_slice_configuration_enabled", skip_serializing_if = "Option::is_none")]
    pub is_slice_configuration_enabled: Option<bool>,
    #[serde(rename = "is_slice_edge_caching_enabled", skip_serializing_if = "Option::is_none")]
    pub is_slice_edge_caching_enabled: Option<bool>,
    #[serde(rename = "is_slice_l2_caching_enabled", skip_serializing_if = "Option::is_none")]
    pub is_slice_l2_caching_enabled: Option<bool>,
    #[serde(rename = "slice_configuration_range", skip_serializing_if = "Option::is_none")]
    pub slice_configuration_range: Option<i64>,
    #[serde(rename = "enable_caching_for_options", skip_serializing_if = "Option::is_none")]
    pub enable_caching_for_options: Option<bool>,
    #[serde(rename = "enable_stale_cache", skip_serializing_if = "Option::is_none")]
    pub enable_stale_cache: Option<bool>,
    #[serde(rename = "l2_region", skip_serializing_if = "Option::is_none")]
    pub l2_region: Option<String>,
}

impl ApplicationCacheCreateRequest {
    pub fn new(name: String) -> ApplicationCacheCreateRequest {
        ApplicationCacheCreateRequest {
            name,
            browser_cache_settings: None,
            browser_cache_settings_maximum_ttl: None,
            cdn_cache_settings: None,
            cdn_cache_settings_maximum_ttl: None,
            cache_by_query_string: None,
            query_string_fields: None,
            enable_query_string_sort: None,
            cache_by_cookies: None,
            cookie_names: None,
            adaptive_delivery_action: None,
            device_group: None,
            enable_caching_for_post: None,
            l2_caching_enabled: None,
            is_slice_configuration_enabled: None,
            is_slice_edge_caching_enabled: None,
            is_slice_l2_caching_enabled: None,
            slice_configuration_range: None,
            enable_caching_for_options: None,
            enable_stale_cache: None,
            l2_region: None,
        }
    }
}


