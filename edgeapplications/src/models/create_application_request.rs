/*
 * Edge Application API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CreateApplicationRequest {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "application_acceleration", skip_serializing_if = "Option::is_none")]
    pub application_acceleration: Option<bool>,
    #[serde(rename = "delivery_protocol", skip_serializing_if = "Option::is_none")]
    pub delivery_protocol: Option<String>,
    #[serde(rename = "origin_type", skip_serializing_if = "Option::is_none")]
    pub origin_type: Option<String>,
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    #[serde(rename = "origin_protocol_policy", skip_serializing_if = "Option::is_none")]
    pub origin_protocol_policy: Option<String>,
    #[serde(rename = "host_header", skip_serializing_if = "Option::is_none")]
    pub host_header: Option<String>,
    #[serde(rename = "browser_cache_settings", skip_serializing_if = "Option::is_none")]
    pub browser_cache_settings: Option<String>,
    #[serde(rename = "cdn_cache_settings", skip_serializing_if = "Option::is_none")]
    pub cdn_cache_settings: Option<String>,
    #[serde(rename = "browser_cache_settings_maximum_ttl", skip_serializing_if = "Option::is_none")]
    pub browser_cache_settings_maximum_ttl: Option<i64>,
    #[serde(rename = "cdn_cache_settings_maximum_ttl", skip_serializing_if = "Option::is_none")]
    pub cdn_cache_settings_maximum_ttl: Option<i64>,
    #[serde(rename = "debug_rules", skip_serializing_if = "Option::is_none")]
    pub debug_rules: Option<bool>,
    #[serde(rename = "supported_ciphers", skip_serializing_if = "Option::is_none")]
    pub supported_ciphers: Option<String>,
    #[serde(rename = "http_port", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub http_port: Option<Option<serde_json::Value>>,
    #[serde(rename = "https_port", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub https_port: Option<Option<serde_json::Value>>,
    #[serde(rename = "l2_caching", skip_serializing_if = "Option::is_none")]
    pub l2_caching: Option<bool>,
    #[serde(rename = "http3", skip_serializing_if = "Option::is_none")]
    pub http3: Option<bool>,
}

impl CreateApplicationRequest {
    pub fn new(name: String) -> CreateApplicationRequest {
        CreateApplicationRequest {
            name,
            application_acceleration: None,
            delivery_protocol: None,
            origin_type: None,
            address: None,
            origin_protocol_policy: None,
            host_header: None,
            browser_cache_settings: None,
            cdn_cache_settings: None,
            browser_cache_settings_maximum_ttl: None,
            cdn_cache_settings_maximum_ttl: None,
            debug_rules: None,
            supported_ciphers: None,
            http_port: None,
            https_port: None,
            l2_caching: None,
            http3: None,
        }
    }
}


