/*
 * Domain API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DomainResponseWithResults {
    #[serde(rename = "count")]
    pub count: i64,
    #[serde(rename = "total_pages")]
    pub total_pages: i64,
    #[serde(rename = "schema_version")]
    pub schema_version: i64,
    #[serde(rename = "links")]
    pub links: Box<models::DomainLinks>,
    #[serde(rename = "results")]
    pub results: Vec<models::DomainEntity>,
}

impl DomainResponseWithResults {
    pub fn new(count: i64, total_pages: i64, schema_version: i64, links: models::DomainLinks, results: Vec<models::DomainEntity>) -> DomainResponseWithResults {
        DomainResponseWithResults {
            count,
            total_pages,
            schema_version,
            links: Box::new(links),
            results,
        }
    }
}

