/*
 * Edge Firewall API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */


/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Variables {
    #[serde(rename = "header_accept")]
    HeaderAccept,
    #[serde(rename = "header_accept_encoding")]
    HeaderAcceptEncoding,
    #[serde(rename = "header_accept_language")]
    HeaderAcceptLanguage,
    #[serde(rename = "header_cookie")]
    HeaderCookie,
    #[serde(rename = "header_origin")]
    HeaderOrigin,
    #[serde(rename = "header_referer")]
    HeaderReferer,
    #[serde(rename = "header_user_agent")]
    HeaderUserAgent,
    #[serde(rename = "host")]
    Host,
    #[serde(rename = "network")]
    Network,
    #[serde(rename = "request_args")]
    RequestArgs,
    #[serde(rename = "request_method")]
    RequestMethod,
    #[serde(rename = "request_uri")]
    RequestUri,
    #[serde(rename = "scheme")]
    Scheme,
    #[serde(rename = "client_certificate_validation")]
    ClientCertificateValidation,

}

impl ToString for Variables {
    fn to_string(&self) -> String {
        match self {
            Self::HeaderAccept => String::from("header_accept"),
            Self::HeaderAcceptEncoding => String::from("header_accept_encoding"),
            Self::HeaderAcceptLanguage => String::from("header_accept_language"),
            Self::HeaderCookie => String::from("header_cookie"),
            Self::HeaderOrigin => String::from("header_origin"),
            Self::HeaderReferer => String::from("header_referer"),
            Self::HeaderUserAgent => String::from("header_user_agent"),
            Self::Host => String::from("host"),
            Self::Network => String::from("network"),
            Self::RequestArgs => String::from("request_args"),
            Self::RequestMethod => String::from("request_method"),
            Self::RequestUri => String::from("request_uri"),
            Self::Scheme => String::from("scheme"),
            Self::ClientCertificateValidation => String::from("client_certificate_validation"),
        }
    }
}

impl Default for Variables {
    fn default() -> Variables {
        Self::HeaderAccept
    }
}




