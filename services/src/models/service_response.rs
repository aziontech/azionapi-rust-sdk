/*
 * Services API
 *
 * Azion Services
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ServiceResponse {
    #[serde(rename = "active")]
    pub active: bool,
    #[serde(rename = "bound_nodes")]
    pub bound_nodes: i64,
    #[serde(rename = "id")]
    pub id: i64,
    #[serde(rename = "last_editor")]
    pub last_editor: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "permissions")]
    pub permissions: Vec<String>,
    #[serde(rename = "updated_at")]
    pub updated_at: String,
    #[serde(rename = "variables", skip_serializing_if = "Option::is_none")]
    pub variables: Option<Vec<crate::models::Variable>>,
}

impl ServiceResponse {
    pub fn new(active: bool, bound_nodes: i64, id: i64, last_editor: String, name: String, permissions: Vec<String>, updated_at: String) -> ServiceResponse {
        ServiceResponse {
            active,
            bound_nodes,
            id,
            last_editor,
            name,
            permissions,
            updated_at,
            variables: None,
        }
    }
}


