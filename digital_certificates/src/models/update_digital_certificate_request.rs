/*
 * Digital Certificates API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UpdateDigitalCertificateRequest {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "certificate", skip_serializing_if = "Option::is_none")]
    pub certificate: Option<String>,
    #[serde(rename = "private_key", skip_serializing_if = "Option::is_none")]
    pub private_key: Option<String>,
    #[serde(rename = "certificate_type", skip_serializing_if = "Option::is_none")]
    pub certificate_type: Option<CertificateType>,
    #[serde(rename = "managed", skip_serializing_if = "Option::is_none")]
    pub managed: Option<bool>,
}

impl UpdateDigitalCertificateRequest {
    pub fn new() -> UpdateDigitalCertificateRequest {
        UpdateDigitalCertificateRequest {
            name: None,
            certificate: None,
            private_key: None,
            certificate_type: None,
            managed: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CertificateType {
    #[serde(rename = "edge_certificate")]
    EdgeCertificate,
    #[serde(rename = "trusted_ca_certificate")]
    TrustedCaCertificate,
}

impl Default for CertificateType {
    fn default() -> CertificateType {
        Self::EdgeCertificate
    }
}

