/*
 * Digital Certificates API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CreateCsrRequest {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "common_name", skip_serializing_if = "Option::is_none")]
    pub common_name: Option<String>,
    #[serde(rename = "country", skip_serializing_if = "Option::is_none")]
    pub country: Option<String>,
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
    #[serde(rename = "locality", skip_serializing_if = "Option::is_none")]
    pub locality: Option<String>,
    #[serde(rename = "organization", skip_serializing_if = "Option::is_none")]
    pub organization: Option<String>,
    #[serde(rename = "organization_unity", skip_serializing_if = "Option::is_none")]
    pub organization_unity: Option<String>,
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    #[serde(rename = "private_key_type", skip_serializing_if = "Option::is_none")]
    pub private_key_type: Option<String>,
    #[serde(rename = "sans", skip_serializing_if = "Option::is_none")]
    pub sans: Option<Vec<String>>,
}

impl CreateCsrRequest {
    pub fn new() -> CreateCsrRequest {
        CreateCsrRequest {
            name: None,
            common_name: None,
            country: None,
            state: None,
            locality: None,
            organization: None,
            organization_unity: None,
            email: None,
            private_key_type: None,
            sans: None,
        }
    }
}


